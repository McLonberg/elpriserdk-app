name: Build and Publish Docker Image

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get next version
        id: version
        run: |
          latest=$(git tag --sort=-v:refname | grep '^v' | head -n1)
          if [ -z "$latest" ]; then
            next="v0.1.0"
          else
            next="v$(echo $latest | sed 's/v//' | awk -F. '{$NF+=1; OFS="."; print $1,$2,$3}')"
          fi
          echo "next_version=$next" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          IMAGE_NAME_LC=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')
          docker build -t $IMAGE_NAME_LC:${{ steps.version.outputs.next_version }} -t $IMAGE_NAME_LC:latest .

      - name: Push Docker image
        run: |
          IMAGE_NAME_LC=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')
          docker push $IMAGE_NAME_LC:${{ steps.version.outputs.next_version }}
          docker push $IMAGE_NAME_LC:latest

      - name: Create Git tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ steps.version.outputs.next_version }}
          git push origin ${{ steps.version.outputs.next_version }}
